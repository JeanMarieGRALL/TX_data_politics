library(FactoMineR)
library(factoextra)
library(data.table)
library(corrplot)
library(ggplot2)
library(dplyr)
library(shiny)
library(FactoInvestigate)
library(Factoshiny)
library(candisc)
library(questionr)
library(MASS)

# chargement des données --------------------------------------------------
delits_21 <- readRDS("../../../DATA/delits_21.rds")
delits_21 = delits_21[,.(nb_delits = sum(nb)),"code_commune"]
emploi_2017 <- readRDS("../../../DATA/emploi_2017.rds")
logement_2017_2_relatif <- readRDS("../../../DATA/logement_2017_2_relatif.rds")
prix_m2_commune <- readRDS("../../../DATA/prix_m2_commune.rds")
resultats_t2_2017 <- readRDS("../../../DATA/resultats2_2017.rds")
resultats_t1_2022 <- readRDS("../../../DATA/resultats_t1_P2022.rds")
rfr_commune <- readRDS("../../../DATA/rfr_2019_commune.rds")
popu_commune <- readRDS("../../../DATA/popu_commune_2019.rds")
resultats_t2_2022 <- readRDS("../../../DATA/resultats_T2_2022.rds")

res_t1_2022_unmelted = resultats_t1_2022
setDT(res_t1_2022_unmelted)
res_t1_2022_unmelted = dcast(data = res_t1_2022_unmelted, formula = code_commune~candidat, fun.aggregate = sum, value.var = "voix")
setDF(res_t1_2022_unmelted)
res_t1_2022_unmelted[,setdiff(names(res_t1_2022_unmelted), c("code_commune", 'abstentions', "nuls", "blancs"))] = res_t1_2022_unmelted[,setdiff(names(res_t1_2022_unmelted), c("code_commune", 'abstentions', "nuls", "blancs"))]/rowSums(res_t1_2022_unmelted[,setdiff(names(res_t1_2022_unmelted), c("code_commune", 'abstentions', "nuls", "blancs"))])


resultats_t2_2017 <- rename(resultats_t2_2017, code_commune = code)
logement_2017_2_relatif <- rename(logement_2017_2_relatif, code_commune = code_com)

dataset <- merge(resultats_t2_2017, emploi_2017, by = "code_commune", all.x = TRUE)
dataset <- merge(dataset, prix_m2_commune, by = "code_commune", all.x = TRUE)
dataset <- merge(dataset, logement_2017_2_relatif, by = "code_commune", all.x = TRUE)
dataset <- merge(dataset, rfr_commune, by = "code_commune", all.x = TRUE)
dataset <- merge(dataset, popu_commune, by = "code_commune", all.x = TRUE)
dataset <- merge(dataset, res_t1_2022_unmelted, by = "code_commune", all.x = TRUE)
dataset <- merge(dataset, delits_21, by = "code_commune", all.x = TRUE)
dataset <- merge(dataset, resultats_t2_2022[,c("code_commune","Vainqueur")], by = "code_commune", all.x = TRUE)
dataset <- dataset[!is.na(dataset$popu),]
dataset <- dataset[dataset$popu >= 500,]


row.names(dataset) = dataset$code_commune

dataset$p_blancs <- 100 * dataset$Blancs / dataset$Inscrits
dataset$p_abstentions <- 100 * dataset$Abstentions / dataset$Inscrits
dataset$p_nuls <- 100 * dataset$Nuls / dataset$Inscrits

dataset$nb_delits_p_1000 = round(100 * (dataset$nb_delits / dataset$popu),1)


rm(list = setdiff(ls(),"dataset"))
gc()


candidats = c("Anne HIDALGO", "Emmanuel MACRON", "Fabien ROUSSEL", "Jean LASSALLE", "Jean-Luc MÉLENCHON", "Marine LE PEN", "Nathalie ARTHAUD","Nicolas DUPONT-AIGNAN", "Philippe POUTOU", "Valérie PÉCRESSE", "Yannick JADOT", "Éric ZEMMOUR" )


names(dataset)

variables = c("p_chom_15_64",
              "p_CS1_15_64",
              "p_CS2_15_64",
              "p_CS3_15_64",
              "p_CS4_15_64",
              "p_CS5_15_64",
              "p_CS6_15_64",
              "prix_moyen_m2",
              "%_av_1919",
              "%_1919_1945",
              "%_1946_1970",
              "%_1971_1990",
              "%_1991_2005",
              "%_ap_2006", 
              "%_locataires_HLM",
              "%_proprios",
              "%_res_secondaires",
              "%_appartements",
              "%_log_inf_30m2",
              "%_log_120_supm2",
              "RFR_2019",
              "popu",
              "nb_delits_p_1000",
              "Marine LE PEN",
              "Emmanuel MACRON",
              "p_blancs",
              "p_abstentions"
)
for(var in variables){
  dataset = dataset[!is.na(dataset[var]) & dataset[var] != "NaN",]
}
dataset = dataset[,variables]

dataset$V_1er <- FALSE
dataset = arrange(dataset, -`Marine LE PEN` )
dataset$V_1er[0:500] <- TRUE
dataset = arrange(dataset, -`Emmanuel MACRON` )
dataset$V_1er[0:500] <- TRUE
dataset <- dataset[dataset$V_1er == TRUE,]
dataset = arrange(dataset, -`Marine LE PEN` )
dataset$V_1er[0:500] <- 1
dataset = arrange(dataset, -`Emmanuel MACRON` )
dataset$V_1er[0:500] <- 0
dataset$`Marine LE PEN` = NULL
dataset$`Emmanuel MACRON` = NULL

table(dataset$V_1er, useNA = "ifany")

rm(list = setdiff(ls(),"dataset"))
gc()


# regression --------------------------------------------------------------

library(GGally)
library(questionr)
library(broom.helpers)
library(effects)
library(ggeffects)
library(car)

freq(dataset$V_1er)

dataset <- rename(dataset,
                  p_ap_2006 = "%_ap_2006",
                  p_av_1919 = "%_av_1919" ,
                  p_1919_1945 = "%_1919_1945",
                  p_1946_1970 = "%_1946_1970",
                  p_1971_1990 = "%_1971_1990",
                  p_1991_2005 = "%_1991_2005",
                  p_locataires_HLM = "%_locataires_HLM",
                  p_proprios = "%_proprios",
                  p_res_secondaires = "%_res_secondaires",
                  p_appartements = "%_appartements",
                  p_log_inf_30m2 = "%_log_inf_30m2",
                  p_log_120_supm2 = "%_log_120_supm2")

names(dataset)

reg <- glm(V_1er ~ p_chom_15_64  + p_CS6_15_64 + p_CS1_15_64 +
              p_CS4_15_64 + p_CS5_15_64+
      p_proprios + p_res_secondaires +
             popu + p_ap_2006 + p_av_1919 + p_1919_1945 +
              p_abstentions,
           data = dataset,
           family = binomial(logit))

drop1(reg, test = "Chisq")

Anova(reg)


# apprentissage -----------------------------------------------------------

delits_21 <- readRDS("../../../DATA/delits_21.rds")
delits_21 = delits_21[,.(nb_delits = sum(nb)),"code_commune"]
emploi_2017 <- readRDS("../../../DATA/emploi_2017.rds")
logement_2017_2_relatif <- readRDS("../../../DATA/logement_2017_2_relatif.rds")
prix_m2_commune <- readRDS("../../../DATA/prix_m2_commune.rds")
resultats_t2_2017 <- readRDS("../../../DATA/resultats2_2017.rds")
resultats_t1_2022 <- readRDS("../../../DATA/resultats_t1_P2022.rds")
rfr_commune <- readRDS("../../../DATA/rfr_2019_commune.rds")
popu_commune <- readRDS("../../../DATA/popu_commune_2019.rds")
resultats_t2_2022 <- readRDS("../../../DATA/resultats_T2_2022.rds")

res_t1_2022_unmelted = resultats_t1_2022
setDT(res_t1_2022_unmelted)
res_t1_2022_unmelted = dcast(data = res_t1_2022_unmelted, formula = code_commune~candidat, fun.aggregate = sum, value.var = "voix")
setDF(res_t1_2022_unmelted)
res_t1_2022_unmelted[,setdiff(names(res_t1_2022_unmelted), c("code_commune", 'abstentions', "nuls", "blancs"))] = res_t1_2022_unmelted[,setdiff(names(res_t1_2022_unmelted), c("code_commune", 'abstentions', "nuls", "blancs"))]/rowSums(res_t1_2022_unmelted[,setdiff(names(res_t1_2022_unmelted), c("code_commune", 'abstentions', "nuls", "blancs"))])


resultats_t2_2017 <- rename(resultats_t2_2017, code_commune = code)
logement_2017_2_relatif <- rename(logement_2017_2_relatif, code_commune = code_com)

dataset0 <- merge(resultats_t2_2017, emploi_2017, by = "code_commune", all.x = TRUE)
dataset0 <- merge(dataset0, prix_m2_commune, by = "code_commune", all.x = TRUE)
dataset0 <- merge(dataset0, logement_2017_2_relatif, by = "code_commune", all.x = TRUE)
dataset0 <- merge(dataset0, rfr_commune, by = "code_commune", all.x = TRUE)
dataset0 <- merge(dataset0, popu_commune, by = "code_commune", all.x = TRUE)
dataset0 <- merge(dataset0, res_t1_2022_unmelted, by = "code_commune", all.x = TRUE)
dataset0 <- merge(dataset0, delits_21, by = "code_commune", all.x = TRUE)
dataset0 <- merge(dataset0, resultats_t2_2022[,c("code_commune","Vainqueur")], by = "code_commune", all.x = TRUE)
dataset0 <- dataset0[!is.na(dataset0$popu),]
dataset0 <- dataset0[dataset0$popu >= 100,]


row.names(dataset0) = dataset0$code_commune

dataset0$p_blancs <- 100 * dataset0$Blancs / dataset0$Inscrits
dataset0$p_abstentions <- 100 * dataset0$Abstentions / dataset0$Inscrits
dataset0$p_nuls <- 100 * dataset0$Nuls / dataset0$Inscrits

dataset0$nb_delits_p_1000 = round(100 * (dataset0$nb_delits / dataset0$popu),1)


rm(list = setdiff(ls(),c("dataset0", "dataset", "reg")))
gc()


candidats = c("Anne HIDALGO", "Emmanuel MACRON", "Fabien ROUSSEL", "Jean LASSALLE", "Jean-Luc MÉLENCHON", "Marine LE PEN", "Nathalie ARTHAUD","Nicolas DUPONT-AIGNAN", "Philippe POUTOU", "Valérie PÉCRESSE", "Yannick JADOT", "Éric ZEMMOUR" )


names(dataset0)

variables = c("p_chom_15_64",
              "p_CS1_15_64",
              "p_CS2_15_64",
              "p_CS3_15_64",
              "p_CS4_15_64",
              "p_CS5_15_64",
              "p_CS6_15_64",
              "prix_moyen_m2",
              "%_av_1919",
              "%_1919_1945",
              "%_1946_1970",
              "%_1971_1990",
              "%_1991_2005",
              "%_ap_2006", 
              "%_locataires_HLM",
              "%_proprios",
              "%_res_secondaires",
              "%_appartements",
              "%_log_inf_30m2",
              "%_log_120_supm2",
              "RFR_2019",
              "popu",
              "nb_delits_p_1000",
              "Marine LE PEN",
              "Emmanuel MACRON",
              "p_blancs",
              "p_abstentions"
)
for(var in variables){
  dataset0 = dataset0[!is.na(dataset0[var]) & dataset0[var] != "NaN",]
}
dataset0 = dataset0[,variables]

# dataset0$V_1er <- FALSE
# dataset0 = arrange(dataset0, -`Marine LE PEN` )
# dataset0$V_1er[0:500] <- TRUE
# dataset0 = arrange(dataset0, -`Emmanuel MACRON` )
# dataset0$V_1er[0:500] <- TRUE
# dataset0 <- dataset0[dataset0$V_1er != TRUE,]
dataset0$`Marine LE PEN` = NULL
dataset0$`Emmanuel MACRON` = NULL

table(dataset0$V_1er, useNA = "ifany")

rm(list = setdiff(ls(),c("dataset0", "dataset", "reg")))
gc()

dataset0 <- rename(dataset0,
                  p_ap_2006 = "%_ap_2006",
                  p_av_1919 = "%_av_1919" ,
                  p_1919_1945 = "%_1919_1945",
                  p_1946_1970 = "%_1946_1970",
                  p_1971_1990 = "%_1971_1990",
                  p_1991_2005 = "%_1991_2005",
                  p_locataires_HLM = "%_locataires_HLM",
                  p_proprios = "%_proprios",
                  p_res_secondaires = "%_res_secondaires",
                  p_appartements = "%_appartements",
                  p_log_inf_30m2 = "%_log_inf_30m2",
                  p_log_120_supm2 = "%_log_120_supm2")

LEP.pred <- predict(reg, type = "response", newdata = dataset0)

resultats_t2_2022 <- readRDS("../../../DATA/resultats_T2_2022.rds")
dataset0$code_commune = rownames(dataset0)

dataset0 <- merge(dataset0, resultats_t2_2022[,c("code_commune","Vainqueur")],by = "code_commune", all.x = TRUE)

X = table(LEP.pred > 0.5 ,dataset0$Vainqueur)
100*(X[2] + X[3]) /(X[2] + X[3] + X[1] + X[4])

cowplot::plot_grid(plotlist = plot(ggeffect(reg)))
library(forestmodel)
forest_model(reg)
ggcoef_model(reg, exponentiate = TRUE)
